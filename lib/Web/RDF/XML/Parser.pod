=head1 NAME

Web::RDF::XML::Parser - An RDF/XML parser

=head1 SYNOPSIS

  use Web::RDF::XML::Parser;
  $rdf = Web::RDF::XML::Parser->new;
  $rdf->ontriple (sub {
    push @result, {@_};
  });
  $rdf->convert_document ($doc);

=head1 DESCRIPTION

The C<Web::RDF::XML::Parser> module is an implementation of RDF/XML.
Using this module, RDF triples embedded within RDF/XML document or
document fragment can be extracted.

=head1 METHODS

Following methods are available:

=over 4

=item $rdf = Web::RDF::XML::Parser->new

Create an RDF/XML parser.

=item $rdf->convert_document ($doc)

Extract the triples from a document.  The argument must be a DOM
C<Document> (e.g. a L<Web::DOM::Document> object).  Extracted triples
are reported through the C<ontriple> callback.

=item $rdf->convert_rdf_element ($doc)

Extract the triples from an element.  The argument must be a DOM
C<Element> containing the triples, e.g. an C<rdf:RDF> element.
Extracted triples are reported through the C<ontriple> callback.

=item $rdf->ontriple ($code)

=item $code = $rdf->ontriple

Get or set the callback function which is invoked for each triple
extracted from the document.

The callback is invoked with following name/value pairs as arguments:
C<subject>, C<predicate>, C<object>, and C<node>.  The callback is not
expected to throw any exception.  Values C<subject>, C<predicate>,
C<object> are parsed term data structures (see L<Web::RDF::Checker>).
The node from which the triple is extracted is given as C<node>.

=item $code = $rdf->onerror

=item $rdf->onerror ($code)

Get or set the error handler for the parser.  Any parse error, as well
as warning and additional processing information, is reported to the
handler.  See
<https://github.com/manakai/data-errors/blob/master/doc/onerror.txt>
for details of error handling.

The value should not be set while the parser is running.  If the value
is changed, the result is undefined.

=item $code = $rdf->onnonrdfnode

=item $rdf->onnonrdfnode ($code)

Get or set the code reference that is invoked whenever a non-RDF node
is detected.  Note that use of such a node in an RDF/XML fragment is
non-conforming.  This hook is intended for injecting validation codes
(e.g. by L<Web::HTML::Validator>).  Note that the node can be a
misplaced C<rdf:RDF> element, for example.

The code is invoked with an argument, which is the node in question.
The code is expected not to throw any exception.  The value should not
be set while the parser is running.  If the value is changed, the
result is undefined.

=item $code = $rdf->onattr

=item $rdf->onattr ($code)

Get or set the code reference that is invoked whenever an attribute is
encounted by the parser.  This hook is intended for injecting
validation codes (e.g. by L<Web::HTML::Validator>).

The code is invoked with an argument, which is the node in question.
The code is expected not to throw any exception.  The value should not
be set while the parser is running.  If the value is changed, the
result is undefined.

=back

=head1 ERROR HANDLING

This module extracts RDF triples from RDF/XML fragment using the
algorithm described in the RDF/XML specification.  When the input does
not conform to the grammer, it try to recover from the error by most
"natural" way; it might or might not report additional triples
depending on how the input is non-conforming.

In most cases the input is non-conforming, the module reports one or
more errors through the C<onerror> handler.  To detect all the
conformance errors, you have to use a conformance checker
(e.g. L<Web::HTML::Validator>) that invokes this module with
appropriate hooks and postprocessors.

=head1 DEPENDENCY

Perl 5.8 or later is required.

This module requires the L<Web::URL::Canonicalize> module in the
perl-web-url repository <https://github.com/manakai/perl-web-url>.

In addition, it expects DOM objects (e.g. L<Web::DOM::Document> and
L<Web::DOM::Element> from <https://github.com/manakai/perl-web-dom>)
as input, although there is no direct dependency.

=head1 SPECIFICATIONS

=over 4

=item RDFXML

RDF 1.1 XML Syntax
<https://dvcs.w3.org/hg/rdf/raw-file/default/rdf-xml/index.html>.

=item VALLANGS

Handling of unknown namespaces in conformance checking
<http://suika.suikawiki.org/www/markup/xml/validation-langs>.

=back

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2013-2014 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
