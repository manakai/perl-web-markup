=head1 NAME

Web::HTML::Validator - DOM Conformance Checker

=head1 SYNOPSIS

  use Web::HTML::Validator;
  
  Web::HTML::Validator->check_document ($doc, sub {
    my %arg = @_;
    warn get_node_path ($arg{node}), ": ",
        ($arg{level} || "Error"), ": ",
        $arg{type}, "\n";
  });
  
  Web::HTML::Validator->check_element ($doc, sub {
    my %arg = @_;
    warn get_node_path ($arg{node}), ": ",
        ($arg{level} || "Error"), ": ",
        $arg{type}, "\n";
  });

=head1 DESCRIPTION

The Perl module C<Web::HTML::Validator> contains methods for
validation of entire or part of DOM tree with regard to relevant Web
standards such as HTML.

=head1 METHODS

This module contains two class methods:

XXX API is not stable.  Don't use this module yet!

=over 4

=item Web::HTML::Validator->check_document (I<$document>, I<$onerror>)

Checks a document, I<$document>, and its descendant for their
conformance.  If there is an error or a warnign, then the
I<$onerror> C<CODE> is invoked with named arguments same
as ones for the method C<check_element>.

=item Web::HTML::Validator->check_element (I<$element>, I<$onerror>)

Checks an element, I<$element>, and its descendant for their conformance.
If there is an error or a warning, then the I<$onerror> C<CODE>
is invoked with named arguments:

=over 4

=item level (Might be C<undef>)

A string which describes the severity of the error or warning.  For
the list of the severities, see
<http://suika.suikawiki.org/gate/2005/sw/Whatpm%20Error%20Types>.

=item node (Always specified)

The node with which the error is detected.

=item type (Always specified)

A string which describes the type of the error or warning.  For the
list of the errors and warnings, see
<http://suika.suikawiki.org/gate/2005/sw/Whatpm%20Error%20Types>.

=item text (Sometimes specified)

An optional string argumenting the type of the error, e.g. an element
name.

=item value (Sometimes specified)

An optional string in which the error occurs.  For example, a URL
extracted from a complex attribute value, in whcih a conformance error
is detected.

=back

=back

=head1 BUGS

This conformance checker is work in progress; it I<might> not be able
to detect all the errors in the DOM tree, and it I<might> detect an
error for a node that is conforming in fact.

=head1 NOTES ON IMPLEMENTATION DETAILS

I<This section is not complete.>

This section describes various internal constructions used in
L<Web::HTML::Validator> and relevant modules.  These data structures
are not public interfaces -- they should not be accessed or modified
by applications.  They are documented here for the convenience of
development only.

=head2 The C<< $self->{flag} >> Structure

=over 4

=item C<< $self->{flag}->{has_label} >>

This flag is set to a true value if and only if there is a C<label>
element ancestor of the current node.

=item C<< $self->{flag}->{has_labelable} >>

This flag is set to C<1> if and only if a nearest ancestor C<label>
element has the C<for> attribute and there is no labelable
form-associated element that is a descendant of the C<label> element
and precedes the current node in tree order.  This flag is set to C<2>
if and only if there is a labelable form-associated element that is a
descendant of the nearest ancestor C<label> element of the current
node and precedes the current node in tree order.  This flag is
otherwise set to a false value.  B<However>, when there is no ancestor
C<label> element of the current node, i.e. when C<<
$self->{flag}->{has_label} >> is false, the value of the C<<
$self->{flag}->{has_labelable} >> flag is I<undefined>.

=back

=head2 The C<$element_state> Structure

=over 4

=item C<< $element_state->{has_label_original} >>

Used to preserve the value of C<< $self->{flag}->{has_label} >> at the
time of invocation of the method C<element_start> for the element
being checked.

=item C<< $element_state->{has_labelable_original} >>

Used to preserve the value of C<< $self->{flag}->{has_labelable} >> at
the time of invocation of the method C<element_start> for the element
being checked.

=back

=head1 DEPENDENCY

In addition to the dependency documented in the README
<https://github.com/manakai/perl-web-markup/blob/master/README.pod#dependency>,
following modules are required:

=over 4

=item perl-web-css <https://github.com/manakai/perl-web-css>

=item perl-web-datetime <https://github.com/manakai/perl-web-datetime>

=item perl-web-langtag <https://github.com/manakai/perl-web-langtag>

=item perl-web-resource <https://github.com/manakai/perl-web-resource>

=item perl-web-url <https://github.com/manakai/perl-web-url>

=back

Also, see L<Web::RDF::XML::Parser>'s dependency section.

=head1 SPECIFICATIONS

=over 4

=item XML

Extensible Markup Language (XML) 1.0 <http://www.w3.org/TR/xml/>.

XML 1.0 Fifth Edition Specification Errata
<http://www.w3.org/XML/xml-V10-5e-errata>.

The C<xml:lang> attribute MUST be interpreted as the C<lang> attribute
in the XML namespace.  The C<xml:space> attribute MUST be interpreted
as the C<space> attribute in the XML namespace.  In other words, the
C<xml:lang> or C<xml:space> attribute in no namespace is different
from the attributes defined in the XML specification.

The C<xml:space> attribute MUST NOT be in error.

The description for the C<xml:lang> attribute value in the XML
specification is interpreted as a MUST-level requirement.

Reserved element names, attribute names, and target names MUST NOT be
used unless allowed by an applicable specification.

=item XMLNS

Namespaces in XML 1.0 <http://www.w3.org/TR/xml-names/>.

Namespaces in XML 1.0 (Third Edition) Errata
<http://www.w3.org/XML/2009/xml-names-errata>.

Requirements on the namespace name is updated as follows:

  A namespace name MUST be a valid non-empty URL
  <http://www.whatwg.org/specs/web-apps/current-work/#valid-non-empty-url>.
  It should be an absolute URL
  <http://url.spec.whatwg.org/#concept-absolute-url>.  For the purpose
  of conformance of the HTML |base| element, attributes declaring XML
  namespaces are not defined as taking URLs.

=item XMLBASE

XML Base <http://www.w3.org/TR/xmlbase/>.

XML Base Specification Errata
<http://www.w3.org/2009/01/xmlbase-errata>.

=item HTML

HTML Standard <http://c.whatwg.org/>.

=item OBSVOCAB

manakai's Conformance Checking Guideline for Obsolete HTML Elements
and Attributes
<http://suika.suikawiki.org/www/markup/html/exts/manakai-obsvocab>.

=back

Atom 1.0, Atom Threading Extension.

For Atom documents, references to RFC 3066 are replaced by references
to BCP 47.

For more information, see
<http://suika.suikawiki.org/gate/2007/html/standards>.

Note that XML 1.1, Namespaces in XML 1.1, C<xml:id>, XLink, XHTML
Modularization, and Ruby Annotation are not applicable specifications.
Also, the module does not support historical HTML features no longer
part of the language, except for those explicitly listed in the
OBSVOCAB specification.  See the specification for details.

=head1 SEE ALSO

<http://suika.suikawiki.org/gate/2005/sw/Whatpm%20Error%20Types>

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
