=head1 NAME

Web::HTML::Parser - An HTML parser

=head1 SYNOPSIS

  use Web::HTML::Parser;
  use Message::DOM::DOMImplementation;
  $parser = Web::HTML::Parser->new;
  $dom = Message::DOM::DOMImplementation->new;
  $doc = $dom->create_document;
  
  $parser->parse_char_string ($chars => $doc);
  $parser->parse_byte_string ($encoding, $bytes => $doc);

  ## Or, just use DOM attribute:
  $doc->manakai_is_html (1);
  $doc->inner_html ($chars);

=head1 DESCRIPTION

The C<Web::HTML::Parser> module is an implementation of the HTML
parser.  It implements the HTML parsing algorithm as defined by HTML
Living Standard.  Therefore, it's parsing behavior is fully compatible
with Web browsers with HTML5 parser enabled.

=head1 METHODS

It is recommended to use standard DOM interface, such as C<inner_html>
method of the C<Document> object, to parse an HTML string, where
possible.  The L<Web::HTML::Parser> module, which, in fact, is used
to implement the C<inner_html> method, offers more control on how
parser behaves, which would not be useful unless you are writing a
complex user agent such as browser or validator.

The L<Web::HTML::Parser> module provides following methods:

=over 4

=item $parser = Web::HTML::Parser->new

Create a new parser.

=item $parser->parse_char_string ($chars => $doc)

Parse a string of characters (i.e. a possibly utf8-flagged string) as
HTML and construct the DOM tree.

The first argument to the method must be a string to parse.  It may or
may not be a valid HTML document.

The second argument to the method must be a DOM C<Document> object
(L<Message::DOM::Document>).  Any child nodes of the document is first
removed by the parser.

=item $parser->parse_byte_string ($encoding, $bytes => $doc)

Parse a string of bytes as HTML and construct the DOM tree.

The first argument to the method must be the label of a (character)
encoding, as specified by the Encoding Standard.  The C<undef> value
can be specified if the encoding is not known.

The second argument to the method must be a string to parse.  It may
or may not be a valid HTML document.

The third argument to the method must be a DOM C<Document> object
(L<Message::DOM::Document>).  Any child nodes of the document is first
removed by the parser.

=item $parser->parse_char_string_with_context ($chars, $context, $target, $method)

Parse a string of characters using the context node I<$context>, using
the method I<$method>, and set the result to the node I<$target>.

The first argument to the method must be a string of characters.

If the I<$method> is C<innerHTML>, the I<$context> argument must be an
element node of C<undef> and the I<$target> node must be a C<RootNode>
(i.e. C<Document>, C<DocumentFragment>, or C<Element>).

Other I<$method> values are not supported.

=item $code = $parser->onerror

=item $parser->onerror ($new_code)

Get or set the error handler for the parser.  Any parse error, as well
as warning and information, is reported to the handler.  See
L<Whatpm::Errors>
<https://github.com/wakaba/manakai/blob/master/lib/Whatpm/Errors.pod>
for more information.

=back

Parsed document structure is reflected to the C<Document> object
specified as an argument to parse methods.  The character encoding
used to parse the document can be retrieved by the C<input_encoding>
method of the C<Document>.

Although the parser is intended to be fully conformant to the HTML
Living Standard, it might not implement latest spec changes yet.  See
list of bugs on the HTML parser
<http://manakai.g.hatena.ne.jp/task/2/> for the current implementation
status.

=head1 SEE ALSO

L<Message::DOM::Document>, L<Message::DOM::Element>.

L<Web::HTML::Serializer>.

L<Web::ContentChecker>.

L<Web::XML::Parser>.

=head1 SPECIFICATIONS

=over 4

=item HTML

HTML Living Standard - Parsing HTML documents
<http://www.whatwg.org/specs/web-apps/current-work/#parsing>.

HTML Living Standard - Parsing HTML fragments
<http://www.whatwg.org/specs/web-apps/current-work/#parsing-html-fragments>.

Document.prototype.innerHTML
<http://html5.org/tools/web-apps-tracker?from=6531&to=6532>.

=item DOMPARSING

DOM Parsing and Serialization <http://domparsing.spec.whatwg.org/>.

=item ENCODING

Encoding Standard <http://encoding.spec.whatwg.org/>.

=item MANAKAI

manakai's DOM Extensions
<http://domparsing.spec.whatwg.org/#innerhtml>.

=back

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
