=head1 NAME

Web::HTML::Serializer - HTML DOM Serializer

=head1 SYNOPSIS

  require Web::HTML::Serializer;
  
  ## Serialize an HTML document
  my $htmlref = Web::HTML::Serializer->get_inner_html ($doc);
  
  ## Serialize an HTML element
  my $htmlref = Web::HTML::Serializer->get_inner_html ($el);
  
  ## Serialize an HTML document fragment
  my $htmlref = Web::HTML::Serializer->get_inner_html ($df);

=head1 DESCRIPTION

The C<Web::HTML::Serializer> module provides a function that
implements the fragment serialization algorithm of HTML5.  It can be
used to serialize an HTML C<Document>, C<Element>, or
C<DocumentFragment> node into an HTML document or fragment.

Note that the algorithm cannot be used to serialize an arbitrary 
DOM tree; an attempt to serialize a DOM that cannot be represented
in a static HTML document (fragment) will result in an invalid 
document or in a document representing different DOM tree.

For example, the DOM tree:

  +- Element |p|
       +- Element |ul|

... cannot be represented in HTML serialization.  The serialization
algorithm will generate an invalid HTML fragment:

  <p><ul></ul></p>

... which represents another DOM tree:

  +- Element |p|
  +- Element |ul|
  (with "invalid </p>" error)

... without raising any error or warning.  This is a limitation of
the HTML serialization format and the fragment serialization algorithm.

B<NOTE>: Usually you don't have to call this module directly, since
L<Web::DOM::Document> and L<Web::DOM::Element> modules implement the
C<inner_html> attribute for DOM C<Document> and C<Element> nodes.

=head1 METHODS

=over 4

=item $serializer = Web::HTML::Serializer->new

Return a new instance of the serializer.

=item $serializer->onerror ($onerror)

Set the error handler.  It must be a reference to C<CODE>, which will
be invoked when an error occurs.  If the algorithm is required to
raise an C<InvalidStateError> exception, i.e. if the algorithm is
faced to a C<Node> whose type is different from any of ones supported
by the algorithm, the C<CODE> is invoked with that C<Node> as an
argument.  It is expected for the C<CODE> to raise an exception.  If
no exception is raised, the C<Node> is ignored for the purpose of the
algorithm.

If no error handler is explicitly specified, an empty C<CODE> is used
as default (i.e. do nothing).

=item SCALARREF = $serializer->get_inner_html ($node)

Serialize the specified node using the HTML fragment serialization
algorithm.  The result is returned as a reference to the character
string.

=back

=head1 SPECIFICATION

=over 4

=item HTML

HTML Standard
<http://www.whatwg.org/specs/web-apps/current-work/complete.html#html-fragment-serialization-algorithm>.

=back

=head1 SEE ALSO

L<Web::XML::Serializer>.

L<Web::DOM::RootNode>.

=head1 AUTHOR

Wakaba <wakaba@suikawiki.org>.

=head1 LICENSE

Copyright 2007-2013 Wakaba <wakaba@suikawiki.org>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
